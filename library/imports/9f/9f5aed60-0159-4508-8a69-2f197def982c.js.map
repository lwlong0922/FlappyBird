{"version":3,"sources":["assets\\Script\\Game\\Pipe.js"],"names":["cc","Class","Component","properties","speed","onLoad","init","node","x","y","randomNum","minNum","maxNum","arguments","length","parseInt","Math","random","onUpdate","dt","parent","getComponent","removePipe"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE,CADC,CAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBQ,GAHP;AAsBL;AAEAC,EAAAA,MAxBK,oBAwBI;AACL,SAAKC,IAAL;AACH,GA1BI;AA4BLA,EAAAA,IA5BK,kBA4BE;AACH,SAAKC,IAAL,CAAUC,CAAV,GAAc,GAAd;AACA,SAAKD,IAAL,CAAUE,CAAV,GAAc,KAAKC,SAAL,CAAe,GAAf,EAAoB,GAApB,CAAd;AACH,GA/BI;AAgCL;AACAA,EAAAA,SAjCK,qBAiCKC,MAjCL,EAiCaC,MAjCb,EAiCqB;AACtB,YAAQC,SAAS,CAACC,MAAlB;AACI,WAAK,CAAL;AACI,eAAOC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgBN,MAAhB,GAAyB,CAA1B,EAA6B,EAA7B,CAAf;AACA;;AACJ,WAAK,CAAL;AACI,eAAOI,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBL,MAAM,GAAGD,MAAT,GAAkB,CAAnC,IAAwCA,MAAzC,EAAiD,EAAjD,CAAf;AACA;;AACJ;AACI,eAAO,CAAP;AACA;AATR;AAWH,GA7CI;AA+CT;AACA;AACA;AACA;AACA;AACA;AACIO,EAAAA,QArDK,oBAqDIC,EArDJ,EAqDQ;AACT;AACA,SAAKZ,IAAL,CAAUC,CAAV,IAAe,KAAKJ,KAAL,GAAae,EAA5B;;AACA,QAAI,KAAKZ,IAAL,CAAUC,CAAV,GAAc,CAAC,GAAnB,EAAwB;AACpB,WAAKD,IAAL,CAAUa,MAAV,CAAiBC,YAAjB,CAA8B,WAA9B,EAA2CC,UAA3C,CAAsD,KAAKf,IAA3D;AACH;AACJ;AA3DI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        speed: 0\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.init()\r\n    },\r\n\r\n    init() {\r\n        this.node.x = 800\r\n        this.node.y = this.randomNum(150, 850)\r\n    },\r\n    // start () {},\r\n    randomNum(minNum, maxNum) {\r\n        switch (arguments.length) {\r\n            case 1:\r\n                return parseInt(Math.random() * minNum + 1, 10);\r\n                break;\r\n            case 2:\r\n                return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\r\n                break;\r\n            default:\r\n                return 0;\r\n                break;\r\n        }\r\n    },\r\n\r\n//    update(dt) {\r\n//         this.node.x += this.speed * dt\r\n//         if (this.node.x < -200) {\r\n//             this.node.parent.getComponent('PipeLayer').removePipe(this.node)\r\n//         }\r\n//     },\r\n    onUpdate(dt) {\r\n        // console.log(this.node.y);\r\n        this.node.x += this.speed * dt\r\n        if (this.node.x < -200) {\r\n            this.node.parent.getComponent('PipeLayer').removePipe(this.node)\r\n        }\r\n    }\r\n});\r\n"]}
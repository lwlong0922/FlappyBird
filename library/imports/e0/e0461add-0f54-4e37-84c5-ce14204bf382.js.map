{"version":3,"sources":["assets\\Script\\Game\\PipeLayer.js"],"names":["ScripeBase","require","Manager","cc","Class","properties","pipePrefab","Prefab","createTime","onInit","initPipeNodePool","schedule","createPipe","pipeNode","pipePool","size","get","instantiate","parent","node","getComponent","init","removePipe","put","onUpdate","dt","children","child","onLateUpdate","NodePool","initCount","i","gameOver","unschedule","clear"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACAE,EAAE,CAACC,KAAH,CAAS;AACL,aAASJ,UADJ;AAGLK,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAEH,EAAE,CAACI,MADP;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAHP;AAQL;AAEA;AAEAC,EAAAA,MAZK,oBAYI;AACL,SAAKC,gBAAL;AACA,SAAKC,QAAL,CAAc,KAAKC,UAAnB,EAA+B,KAAKJ,UAApC;AACH,GAfI;AAiBLI,EAAAA,UAjBK,wBAiBQ;AACT,QAAIC,QAAJ;;AACA,QAAI,KAAKC,QAAL,CAAcC,IAAd,KAAuB,CAA3B,EAA8B;AAC1BF,MAAAA,QAAQ,GAAG,KAAKC,QAAL,CAAcE,GAAd,EAAX;AACH,KAFD,MAEO;AACHH,MAAAA,QAAQ,GAAGV,EAAE,CAACc,WAAH,CAAe,KAAKX,UAApB,CAAX;AACH;;AACDO,IAAAA,QAAQ,CAACK,MAAT,GAAkB,KAAKC,IAAvB;AACAN,IAAAA,QAAQ,CAACO,YAAT,CAAsB,MAAtB,EAA8BC,IAA9B;AACH,GA1BI;AA4BLC,EAAAA,UA5BK,sBA4BMT,QA5BN,EA4BgB;AACjB,SAAKC,QAAL,CAAcS,GAAd,CAAkBV,QAAlB;AACH,GA9BI;AAgCLW,EAAAA,QAhCK,oBAgCIC,EAhCJ,EAgCQ;AACT,yDAAkB,KAAKN,IAAL,CAAUO,QAA5B,wCAAsC;AAAA,UAA7BC,KAA6B;AAClCA,MAAAA,KAAK,CAACP,YAAN,CAAmB,MAAnB,EAA2BI,QAA3B,CAAoCC,EAApC;AACH;AACJ,GApCI;AAsCLG,EAAAA,YAtCK,wBAsCQH,EAtCR,EAsCY,CAEhB,CAxCI;AA2CLf,EAAAA,gBA3CK,8BA2Cc;AACf,SAAKI,QAAL,GAAgB,IAAIX,EAAE,CAAC0B,QAAP,EAAhB;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+B,EAAEC,CAAjC,EAAoC;AAChC,UAAIlB,QAAQ,GAAGV,EAAE,CAACc,WAAH,CAAe,KAAKX,UAApB,CAAf;AACA,WAAKQ,QAAL,CAAcS,GAAd,CAAkBV,QAAlB;AACH;AACJ,GAlDI;AAmDLmB,EAAAA,QAnDK,sBAmDM;AACP,SAAKC,UAAL,CAAgB,KAAKrB,UAArB;AACA,SAAKE,QAAL,CAAcoB,KAAd;AACH,GAtDI,CAyDL;AAEA;;AA3DK,CAAT","sourceRoot":"/","sourcesContent":["let ScripeBase = require('ScriptBase')\r\nlet Manager = require('Manager')\r\ncc.Class({\r\n    extends: ScripeBase,\r\n\r\n    properties: {\r\n        pipePrefab: cc.Prefab,\r\n        createTime: 0.0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    onInit() {\r\n        this.initPipeNodePool()\r\n        this.schedule(this.createPipe, this.createTime)\r\n    },\r\n\r\n    createPipe() {\r\n        let pipeNode;\r\n        if (this.pipePool.size() > 0) {\r\n            pipeNode = this.pipePool.get();\r\n        } else {\r\n            pipeNode = cc.instantiate(this.pipePrefab);\r\n        }\r\n        pipeNode.parent = this.node;\r\n        pipeNode.getComponent('Pipe').init();\r\n    },\r\n\r\n    removePipe(pipeNode) {\r\n        this.pipePool.put(pipeNode)\r\n    },\r\n\r\n    onUpdate(dt) {\r\n        for (let child of this.node.children) {\r\n            child.getComponent('Pipe').onUpdate(dt);\r\n        }\r\n    },\r\n\r\n    onLateUpdate(dt) {\r\n       \r\n    },\r\n\r\n\r\n    initPipeNodePool() {\r\n        this.pipePool = new cc.NodePool();\r\n        let initCount = 5;\r\n        for (let i = 0; i < initCount; ++i) {\r\n            let pipeNode = cc.instantiate(this.pipePrefab);\r\n            this.pipePool.put(pipeNode);\r\n        }\r\n    },\r\n    gameOver() {\r\n        this.unschedule(this.createPipe)\r\n        this.pipePool.clear()\r\n    }\r\n\r\n\r\n    // start () {    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}